#include<iostream>
#include<vector>
#include<unordered_map>
#include<algorithm>
#include<limits>
using namespace std;

int main(){

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
}

//层序遍历二叉树，将其存入二维数组，数组一个元素就是一层，只不过这次元素（层）是反向的 
//思路，先建立二维数组，大小由DFS查找树的深度决定，再DFS每一层的元素 
vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
    
}



 
